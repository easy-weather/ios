// Generated by CoffeeScript 1.4.0
(function() {

	WEATHER.Views.App = Backbone.View.extend({
		initialize: function(options) {
			var _this = this;
			this.el = $(this.el);
	
			this.template = _.template(window.WEATHER.Templates["app"]);
			
			if (options.appDelegate) {
				this.appDelegate = options.appDelegate;
			}
		
			if (options.model) {
					this.model = options.model;
			}
			

			var readyElement = this.el.find("#content");
			
			this.tabBar = cordova.require("cordova/plugin/iOSTabBar");
			
			this.tabBar.init();
			
			this.tabBar.createItem("today", "Today", "thermometer.png", {
			  onSelect: $.proxy(function() {
					this.render();
			  }, this)
			});
			
			this.tabBar.createItem("forecast", "Forecast", "weather.png", {
			  onSelect: $.proxy(function() {
					this.renderSecondView();
			  }, this)
			});
			
			this.tabBar.show();
			this.tabBar.showItems("today", "forecast");
			
			this.tabBar.selectItem("today");
			
			window.addEventListener("resize", function() { this.tabBar.resize() }, false);
	 },
	 error: function(message) {
	 	this.el.html(this.template());
	 
		this.tabBar.hide();
		var error = new WEATHER.Views.Oops();
		error.render();
		
		return this.el.find("#content").html(error.el);
	 },
	 render: function() {
		this.el.html(this.template());
		if (this.model.activeView) {		
			this.model.activeView.appDelegate = this;
			this.model.activeView.render();
			
			return this.el.find("#content").html(this.model.activeView.el);
		}
	 },
	 renderSecondView: function() {
		if (this.model.secondView) {
			this.model.secondView.appDelegate = this;
			this.model.secondView.render();
			
			return this.el.find("#content").html(this.model.secondView.el);
		}
	 },
	 postRender: function() {}
  });

}).call(this);
