// Generated by CoffeeScript 1.4.0

document.addEventListener("deviceready", onDeviceReady, false);

function onDeviceReady() {		
	var AppRouter;
	
	AppRouter = Backbone.Router.extend({
		routes: {
			"": "home"
		},
		home: function() {
			return this.appModel.on("geoLocationFound", (function() {
				var conditions, forecast,
				_this = this;
			
				forecast = new WEATHER.Collections.Forecast({
					lat: this.appModel.geoLocation.coords.latitude,
					long: this.appModel.geoLocation.coords.longitude
				});
				
				conditions = new WEATHER.Collections.Conditions({
					lat: this.appModel.geoLocation.coords.latitude,
					long: this.appModel.geoLocation.coords.longitude
				});
				
				this.appModel.activeView = new WEATHER.Views.Conditions({
					model: conditions
				});
				
				this.appModel.secondView = new WEATHER.Views.Forecast({
					model: forecast
				});
				
				this.appModel.activeView.model.fetch({
					success: function() {
					  return _this.appView.render();
					  }
				});
				
				return this.appModel.secondView.model.fetch({
					success: function() {
					  return _this.appView.renderSecondView();
					}
				});
			}), this);
		},
		initialize: function() {
			var appModel;
			
			this.appModel = new WEATHER.Models.App();
			if (navigator.geolocation) {
				this.appModel.activeView = new WEATHER.Views.Loading();
				appModel = this.appModel;
				
				navigator.geolocation.getCurrentPosition(function(pos) {
					appModel.geoLocation = pos;
				
					return appModel.trigger("geoLocationFound");
				});
			} else {
				this.appModel.noGeoLocation = true;
			}
			
			this.appView = new WEATHER.Views.App({
				model: this.appModel,
				appDelegate: this
			});
			
			this.appView.render();
			return $("body").html(this.appView.el);
		}
	});
		
	new AppRouter();
	Backbone.history.start();
}